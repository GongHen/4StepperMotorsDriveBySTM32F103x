// 1. ucosII中断管理

// 1.1 用户ISR的框架
		---- // 保存全部CPU寄存器的值（保存现场）
		---- OSIntEnter(); // or,
			 OSIntNesting + 1;
				---- void OSIntEnter(void)
					 {
						if(OSRunning == TRUE) 
						{
							if(OSIntNesting < 255)
							{
								OSIntNesting++;
							}
						}
					 }	 
		---- // 用户自定义代码
		---- OSIntExit();		
				---- // 判断中断结束后当前任务与所有就绪任务是否优先级最高
				---- // 装入高优先级任务
				---- OSIntCtxSW();	// 中断级切换
		---- // 恢复全部CPU寄存器的值（恢复现场）
		---- // 中断返回

// 2. ucosII时钟管理

// 2.1 时钟节拍(SysTick, 10Hz~100Hz, 来源MCU定时器)

// 2.2 时钟节拍ISR
		---- OSTickISR();
				---- // 保存现场
				---- OSIntEnter(); // or,
					 OSIntNesting + 1;
				---- OSTimeTick(); // 检查每个任务的时间延时
						---- OSTimeTickHook();
						---- // 获得任务控制块链表指针
						---- loop(all TCB) OSTCBDly-1;	// 使每个任务控制块的延时变量减一
						---- // 判断任务是否被挂起
						---- OSTime();					// 累积时间
				---- OSIntExit();
				---- // 恢复现场
				---- // 中断返回

// 2.3 系统的初始化
		---- OSInit();
				---- OSTaskIdle();		// 建立空闲任务
				---- OSTaskStat();		// 建立统计任务
				---- // 初始化ucoII的所有变量和数据结构
		---- OSTaskCreate();// 至少1个
				---- OSStatInit();	// 在第一个创建的任务函数实体中调用
		---- OSStart();		// 启动多任务,永不返回
				---- OSStartHighRdy(); // 调动最高优先级任务为就绪状态
					（保留任务1，启动定时器）
				
				
				
				
		